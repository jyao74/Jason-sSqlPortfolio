/*	The CFO is looking to decrease basic prices by 8% in the EMEA market due to a new streaming competitor in the European market and increasing prices by 11% in the North American and Latin American markets (excluding the US) for customers that have been with us for at least 18 months. We also will allow the content size for the EMEA countries to remain the same but will increase the content size by 5% for the North American and Latin American countries in order to substantiate the price increase. Please provide the new annual revenue for each of the customers with these new prices along with the effective date of these changes, which will be 90 days from their last payment date, and the new content size for each of the countries in the EMEA, Latin American, and North American markets.
•	United States (North American)
•	Canada (North American)
•	United Kingdom (EMEA)
•	Australia (EMEA)
•	Germany (EMEA)
•	France (EMEA)
•	Brazil	(Latin America)
•	Mexico (North American)
•	Spain	(EMEA)
•	Italy	(EMEA)
*/

select userbase.user_id,
userbase.subscription_type,
userbase.join_date,
datediff(month,userbase.join_date,getdate()) as Customer_Sub_Length,
userbase.last_payment_date,
dateadd(day,90,userbase.last_payment_date) as Effective_Date,
userbase.monthly_revenue,
userbase.country,
case when userbase.country in ('Canada','Mexico','United States') then 'North America'
    when userbase.country = 'Brazil' then 'Latin America'
    else 'EMEA' end as Region,

case when userbase.country in ('United States','Canada','Mexico','Brazil') then userbase.monthly_revenue*1.11
else userbase.monthly_revenue*.92 end as New_Monthly_Pricing,

case when userbase.country in ('United States','Canada','Mexico','Brazil') then userbase.monthly_revenue*1.11*12
else userbase.monthly_revenue*.92*12 end as New_Annual_Pricing,

netflix_countries.no_of_tv_shows,
netflix_countries.no_of_movies,
netflix_countries.no_of_tv_shows+netflix_countries.no_of_movies as Content_Size,
case when userbase.country in ('Canada','Mexico','Brazil') then 
(netflix_countries.no_of_tv_shows+netflix_countries.no_of_movies)*1.05
else (netflix_countries.no_of_tv_shows+netflix_countries.no_of_movies) end as New_Content_Size

from userbase join netflix_countries on userbase.country=netflix_countries.country

where datediff(month,userbase.join_date,getdate()) >= 18 and userbase.subscription_type = 'Basic' and 
userbase.country != 'United States'

/*For these users you provided me, may you tell me which ones are corporate? You can usually tell by their email addresses. Any with Yahoo, Gmail, Outlook, Hotmail, Cox, and AOL are personal email addresses. All others would be considered corporate. Please retain the same data pull from the previous request I sent to you.*/

select userbase.user_id,
sub_demo.e_dom,
userbase.subscription_type,
userbase.join_date,
datediff(month,userbase.join_date,getdate()) as Customer_Sub_Length,
userbase.last_payment_date,
dateadd(day,90,userbase.last_payment_date) as Effective_Date,
userbase.monthly_revenue,
userbase.country,

case when userbase.country in ('Canada','Mexico','United States') then 'North America'
    when userbase.country = 'Brazil' then 'Latin America'
    else 'EMEA' end as Region,

case when userbase.country in ('United States','Canada','Mexico','Brazil') then userbase.monthly_revenue*1.11
else userbase.monthly_revenue*.92 end as New_Monthly_Pricing,

case when userbase.country in ('United States','Canada','Mexico','Brazil') then userbase.monthly_revenue*1.11*12
else userbase.monthly_revenue*.92*12 end as New_Annual_Pricing,

netflix_countries.no_of_tv_shows,
netflix_countries.no_of_movies,

netflix_countries.no_of_tv_shows+netflix_countries.no_of_movies as Content_Size,
case when userbase.country in ('Canada','Mexico','Brazil') then 
(netflix_countries.no_of_tv_shows+netflix_countries.no_of_movies)*1.05
else (netflix_countries.no_of_tv_shows+netflix_countries.no_of_movies) end as New_Content_Size

from userbase join netflix_countries on userbase.country=netflix_countries.country 
join sub_demo on sub_demo.sub_id=userbase.user_id

where datediff(month,userbase.join_date,getdate()) >= 18 and userbase.subscription_type = 'Basic' and 
userbase.country != 'United States' and
(sub_demo.e_dom not like '%aol%' and sub_demo.e_dom not like '%cox%' and sub_demo.e_dom not like '%yahoo%' and sub_demo.e_dom not like '%gmail%'
and sub_demo.e_dom not like '%outlook%' and sub_demo.e_dom not like '%hotmail%')

/*For these users, can you let me know which are not email subscribers? We may be interested in a marketing campaign to target these users to get them added to our email list.*/

select userbase.user_id,
email_sub.id,
sub_demo.e_dom,
userbase.subscription_type,
userbase.join_date,
datediff(month,userbase.join_date,getdate()) as Customer_Sub_Length,
userbase.last_payment_date,
dateadd(day,90,userbase.last_payment_date) as Effective_Date,
userbase.monthly_revenue,
userbase.country,

case when userbase.country in ('Canada','Mexico','United States') then 'North America'
    when userbase.country = 'Brazil' then 'Latin America'
    else 'EMEA' end as Region,

case when userbase.country in ('United States','Canada','Mexico','Brazil') then userbase.monthly_revenue*1.11
else userbase.monthly_revenue*.92 end as New_Monthly_Pricing,

case when userbase.country in ('United States','Canada','Mexico','Brazil') then userbase.monthly_revenue*1.11*12
else userbase.monthly_revenue*.92*12 end as New_Annual_Pricing,

netflix_countries.no_of_tv_shows,
netflix_countries.no_of_movies,

netflix_countries.no_of_tv_shows+netflix_countries.no_of_movies as Content_Size,
case when userbase.country in ('Canada','Mexico','Brazil') then 
(netflix_countries.no_of_tv_shows+netflix_countries.no_of_movies)*1.05
else (netflix_countries.no_of_tv_shows+netflix_countries.no_of_movies) end as New_Content_Size,

case when (sub_demo.e_dom not like '%aol%' and sub_demo.e_dom not like '%cox%' and sub_demo.e_dom not like '%yahoo%' and sub_demo.e_dom not like '%gmail%'
and sub_demo.e_dom not like '%outlook%' and sub_demo.e_dom not like '%hotmail%') then 'Corporate' else 'Personal' end as Email_Type


from userbase join netflix_countries on userbase.country=netflix_countries.country 
join sub_demo on sub_demo.sub_id=userbase.user_id
left join email_sub on email_sub.id=userbase.user_id

where datediff(month,userbase.join_date,getdate()) >= 18 and userbase.subscription_type = 'Basic' and 
userbase.country != 'United States' and 
case when (sub_demo.e_dom not like '%aol%' and sub_demo.e_dom not like '%cox%' and sub_demo.e_dom not like '%yahoo%' and sub_demo.e_dom not like '%gmail%'
and sub_demo.e_dom not like '%outlook%' and sub_demo.e_dom not like '%hotmail%') then 'Corporate' else 'Personal' end = 'Corporate'
and email_sub.id is null

/*Please provide how many of these subscribers there are, the average new monthly revenue, the new total annual revenue, and the content size for EMEA subscribers.*/

select count(userbase.user_id) as Sub_Count,

avg(case when userbase.country in ('United States','Canada','Mexico','Brazil') then userbase.monthly_revenue*1.11
else userbase.monthly_revenue*.92 end) as Average_New_Monthly_Pricing,

sum(case when userbase.country in ('United States','Canada','Mexico','Brazil') then userbase.monthly_revenue*1.11*12
else userbase.monthly_revenue*.92*12 end) as Total_New_Annual_Pricing,

sum(case when userbase.country in ('Canada','Mexico','Brazil') then 
(netflix_countries.no_of_tv_shows+netflix_countries.no_of_movies)*1.05
else (netflix_countries.no_of_tv_shows+netflix_countries.no_of_movies) end) as Total_New_Content_Size


from userbase join netflix_countries on userbase.country=netflix_countries.country 
join sub_demo on sub_demo.sub_id=userbase.user_id
left join email_sub on email_sub.id=userbase.user_id

where datediff(month,userbase.join_date,getdate()) >= 18 and userbase.subscription_type = 'Basic' and 
userbase.country not in ('Mexico','Canada','Brazil','United States') and 
(sub_demo.e_dom not like '%aol%' and sub_demo.e_dom not like '%cox%' and sub_demo.e_dom not like '%yahoo%' and sub_demo.e_dom not like '%gmail%'
and sub_demo.e_dom not like '%outlook%' and sub_demo.e_dom not like '%hotmail%') 
and email_sub.id is null

/* What Does This Query Say*/

SELECT
users.user_id,
users.first_name,
users.last_name,
users.email,
subscriptions.subscription_type,
subscriptions.start_date,
subscriptions.end_date,
movies.title,
movies.genre,
movies.release_date,
payment_info.payment_method,
payment_info.card_number
FROM
users
LEFT JOIN
subscriptions ON users.user_id = subscriptions.user_id
LEFT JOIN
payment_info ON users.user_id = payment_info.user_id

Answer: Return all user data specified in the select statement from the Users table along with their
corresponding data from the Subscriptions and Payment_Info table.

/* What Does This Query Say? */

SELECT
residentID,
residentfirst,
residentlast,
census_date_taken,
region,
year(census_date_taken),
population_count,
population_count*1.03,
population_count*.03,
DATEADD(year, 1, GETDATE()) as Census_Release_Year
FROM population_data

Answer: This query states to return the following:
• resident’s ID
• resident’s name
• Census date
• Region the resident is located in
• Year of the census date
• Population count
• Population count with a 3% increase added to it
• The amount of the 3% population
• Census release date, which is one year from the census date

/* Our SVP of HR wants to give everyone a 10% COLA (cost of living adjustment). Can you please
provide me with the following for each employee:
Current salary
New salary with the 10% COLA increase
The amount of the 10% COLA*/

select emplfirst,
empllast,
hourly_rate,
hourly_rate * 2080 as Salary,
(hourly_rate * 2080) * .10 as COLA,
hourly_rate * 2080 * 1.10 as New_Salary_with_COLA
from employee_demographics

/* Calculate the salary for each employee. Hint: To calculate the salary from an hourly rate,
you would calculate the following: hourly rate * 2080 hours. 2080 hours are the number of hours
employees work in a year.*/

select employee_id,
emplfirst,
empllast,
hourly_rate,
hourly_rate*2080 as Employee_Salary
from employee_demographics

/* Which 10 employees are paid the most? Be sure to also include the following for these 10
employees:
Current salary
New salary with the 10% COLA increase
The amount of the 10% COLA*/

select emplfirst,
empllast,
hourly_rate,
hourly_rate * 2080 as Salary,
(hourly_rate * 2080) * .10 as COLA,
hourly_rate * 2080 * 1.10 as New_Salary_with_COLA
from employee_demographics
order by Salary desc
limit 10

/* Calculate the following (all in one query; DO NOT write multiple queries to answer this question)
Average annual salary
Maximum annual salary
Minimum annual salary
Number of employees*/

select Max(2080*hourly_rate) as Highest_Annual_Salary,
Min(2080*hourly_rate) as Lowest_Annual_Salary,
Avg(2080*hourly_rate) as Average_Annual_Salary,
Count(Employee_id) as Number_of_employees

/* Which stock dates are included in both the History and the Stock Prices table? Be sure to include the month’s name, quarter, and day of the week for each of the stock dates. Also, calculate how long ago the stock trading date was in days. */

select history_stock.trading_date,
monthname(history_stock.trading_date) as Stock_Month,
dayname(history_stock.trading_date) as Stock_Month,
quarter(history_stock.trading_date) as Stock_Month,
year(history_stock.trading_date) as Stock_Month,
datediff(day,history_stock.trading_date,getdate()) as Days_Since
from history_stock join stock_price on history_stock.trading_date=stock_price.trading_date

/*	Which stock dates from the History Stock table are not currently included in our Stock Prices table? */

select history_stock.trading_date as History_StockDate,
stock_price.trading_date as SP_Stock_Date
from history_stock left join stock_price on history_stock.trading_date=stock_price.trading_date
where stock_price.trading_date is null

/*List of millennial users in our top market that joined in the last year whose monthly subscription is at least $14.99 per month. Sort by the country from A to Z, then by the join date from newest to oldest if you may.*/

select 
user_id,
monthly_revenue,
join_date,
age,
country
from userbase
where age between 25 and 34 and country in ('United States','Canada') and
join_date between '10/01/2022' and '09/30/2023' and monthly_revenue >= 14.99

/*Users whose last payments were made on weekends. This is becoming an issue with our bank due to the processing delay we experience with these payments vs. weekday payments. */

select user_id,
last_payment_date,
dayname(last_payment_date)
from userbase
where dayname(last_payment_date) in ('Sat','Sun')

/*All users who joined the quarter after the start of the pandemic*/

select user_id,
join_date,
monthname(join_date) as Join_Month,
year(join_date) as Join_Year
from userbase
where monthname(join_date) in ('Apr','May','Jun') and year(join_date) = 2020

/*25 longest movies outside of our top markets released prior to the pandemic*/

select type,
title,
country,
release_year,
duration
from titles
where release_year < 2020 and (country not like '%United States%' and country not like '%Canada%')
and type = 'Movie'
order by duration desc 
limit 25

/*The content strategy team needs a list of all tv shows on Netflix with at least a 7.0 score on IMDb and at least a 75 Rotten Tomatoes score for shows released after our inception. Sort by the score from largest to smallest, then by the title name from A to Z.*/

select title,
netflix,
imdb,
rotten_tomatoes,
year
from streaming_shows
where netflix = '1' and imdb >= 7.0 and rotten_tomatoes >= 75 and year > 1997
order by rotten_tomatoes desc, title asc

